% Generated by roxygen2 (4.0.1): do not edit by hand
\docType{class}
\name{h5MEMMAT-class}
\alias{h5MEMMAT}
\alias{h5MEMMAT-class}
\title{Specification of the h5MEMMAT reference class}
\description{
The h5MEMMAT class allows the user to create a h5MAT object in memory rather than on file.
The matrix chunks are stored in memory and these are accessed by pointers in the h5MEMMAT object.
}
\section{Methods}{

\describe{
\item{\code{append(MAT, ...)}}{The append() method allows new data to be appended to a h5MEMMAT object.
  @param MAT the matrix to be appended. Either a matrix or a character denoting a csv file
        containing the matrix to be appended.
  @param ... parameters passed to read.csv() function
  Usage:
  $append((matrix or character) MAT, (passed to read.csv()) ...)}

\item{\code{createH5MAT(filePath)}}{The createH5MAT() method writes the memory matrix to file and returns a h5MAT object
  @param filePath character for the path to the file where the h5 object will be written
  Usage:
  $createH5MAT((character) filePath)}

\item{\code{createH5MEMMAT(MAT, chunkSize, ...)}}{The createH5MEMMAT() method populates a new h5MAT object with data defined by MAT, filePath, and chunkSize.
  Users are directed to the newH5MEMMAT() function which are more convenient.
  @param MAT matrix or character file path to CSV containing matrix to be written to H5 file object
  @param chunkSize the number of rows the defines each chunk
  @param ... arguments passed to read.csv() function
  Usage:
  $createH5MEMMAT((matrix or character) MAT, (numeric) chunkSize, ...)}

\item{\code{createIndicies()}}{The createIndicies() methods creates the indices that will be used to chunk the data
  Usage:
  $createIndicies()}

\item{\code{createMetaData()}}{The createMetaData() method is not intended for the user. It is used to create the
  meta data for a new object in the h5MEMMAT object.
  Usage:
  $createMetaData()}

\item{\code{readChunk(chunkNum)}}{The readChunk() method reads a chunk from the h5MEMMAT object into R as a matrix
  @param chunkNum the number of the chunk to be read into R.
  Usage:
  $readChunk((numeric) chunkNum)}

\item{\code{readChunks(chunkNums)}}{The readChunks() methods reads chunks defined by a numeric vector into R
  @param chunkNums a numeric vector of chunks to be read into R.
  Usage:
  $readChunks((numeric) chunkNums)}

\item{\code{readTable()}}{The readTable() method reads all the chunks in the h5MEMMAT object and returns them as a single matrix.
  Usage:
  $readTable()}

\item{\code{updateMetaData()}}{The updateMetaData() method is an internal method and not intended to use by the user. It updates
  the meta data of the h5MEMMAT object on file and in R when the user appends new data.
  Usage:
  $updateMetaData()}

\item{\code{writeMatrix()}}{The method writeMatrix() is not intended for the user. It is an internal method to be used to 
  write chunks of data as matrices to the h5 object.
  Usage:
  $writeMatrix()}
}}
\section{Methods in the h5MEMMAT object}{

\itemize{
\item h5MEMMAT$new() creates a new h5MEMMAT object, users should use ?newH5MAT() or ?openH5MAT().
\item h5MEMMAT$createH5MAT(MAT, filePath, chunkSize, ...) populates a h5MEMMAT object with data from MAT.
Users should use ?newH5MAT() or ?openH5MAT().
\itemize{
   \item MAT a matrix or a path to a csv file containing a matrix to be converted to a h5MEMMAT object
   \item filePath a character denoting a path to a location where the h5MEMMAT object wll be written
   \item chunkSize number of rows denoting the size of each matrix chunk
   \item ... parameters to be passed to the read.csv() function
}
\item h5MEMMAT$append(MAT, ...) appends matrix MAT to the current h5MEMMAT object
\itemize{
   \item MAT a matrix or a path to a csv file containing a matrix to be converted to a h5MEMMAT object
   \item ... parameters to be passed to the read.csv() function
}
\item h5MEMMAT$readChunk(chunkName) reads the chunk denotes by chunkName into R as a matrix
\itemize{
   \item chunkName a character denoting the name of the chunk to be returned as a matrix
}
\item h5MEMMAT$readChunks(chunks) read the chunks denotes by chunks into R as a matrix
\itemize{
   \item chunks a character vector denoting the chunks to be read into R as a single matrix
}
\item h5MEMMAT$readTable() reads the whole matrix in the h5MEMMAT into R as a matrix
\item h5MEMMAT$createH5MAT(filePath) this function converts the h5MEMMAT object to a h5MAT object.
It writes the data in the h5MEMMAT object to filePath and returns a h5MAT object.
}
}

\section{Fields in the h5MEMMAT object}{

These are the fields in the h5MEMMAT object, they are not to be directly modified by the user but can
be accessed by h5MEMMAT$fieldName.

\itemize{
\item nChunks: The number of chunks in the h5MEMMAT object
\item ptrs: A list of pointers to each of the chunks in the matrix
\item nrows: The number of rows in the data frame
\item ncols: The number of columns in the data frame
\item chunkSize: The number of rows each chunk will contain
\item MAT: For internal use when manipulating the data frame
\item oldNChunks: For internal use.
}
}

